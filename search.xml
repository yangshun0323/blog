<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ChatGPT-AI人机对话</title>
      <link href="/2023/04/09/chatgpt/"/>
      <url>/2023/04/09/chatgpt/</url>
      
        <content type="html"><![CDATA[<h1 id="ChatGPT"><a href="#ChatGPT" class="headerlink" title="ChatGPT:"></a>ChatGPT:</h1><script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>  <style>        .container.content{            width: 118%;            max-width: 118%;        }        #artDetail{            width: 85%;        }        code[class*=language-],pre[class*=language-]{color:#ccc;background:0 0;font-family:Consolas,Monaco,'Andale Mono','Ubuntu Mono',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background:#2d2d2d}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.block-comment,.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#999}.token.punctuation{color:#ccc}.token.attr-name,.token.deleted,.token.namespace,.token.tag{color:#e2777a}.token.function-name{color:#6196cc}.token.boolean,.token.function,.token.number{color:#f08d49}.token.class-name,.token.constant,.token.property,.token.symbol{color:#f8c555}.token.atrule,.token.builtin,.token.important,.token.keyword,.token.selector{color:#cc99cd}.token.attr-value,.token.char,.token.regex,.token.string,.token.variable{color:#7ec699}.token.entity,.token.operator,.token.url{color:#67cdcc}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}.token.inserted{color:green}        .code-toolbar{            position: relative;            background: #000;            padding-top: 20px;            border-radius: 5px;            }            pre[class*="language-"].line-numbers {            position: relative;            padding: 3px; /*修改*/            padding-left: 3.8em;            counter-reset: linenumber;            max-height: 400px;/*修改*/            background: #151515;/*修改*/            border: none;            }            .pre-mac{            position: absolute;            top: 7px;            left: 10px;            width: 100px;            z-index: 99;            }            .pre-mac>span{            float: left;            width: 10px;            height: 10px;            border-radius: 50%;            margin-right: 5px;            }            .pre-mac>span:nth-child(1){            background: red;            }            .pre-mac>span:nth-child(2){            background: sandybrown;            }            .pre-mac>span:nth-child(3){            background: limegreen;            }    </style> <script>    var _self="undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{},Prism=function(e){var n=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,t=0,r={},a={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function e(n){return n instanceof i?new i(n.type,e(n.content),n.alias):Array.isArray(n)?n.map(e):n.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++t}),e.__id},clone:function e(n,t){var r,i;switch(t=t||{},a.util.type(n)){case"Object":if(i=a.util.objId(n),t[i])return t[i];for(var l in r={},t[i]=r,n)n.hasOwnProperty(l)&&(r[l]=e(n[l],t));return r;case"Array":return i=a.util.objId(n),t[i]?t[i]:(r=[],t[i]=r,n.forEach((function(n,a){r[a]=e(n,t)})),r);default:return n}},getLanguage:function(e){for(;e;){var t=n.exec(e.className);if(t)return t[1].toLowerCase();e=e.parentElement}return"none"},setLanguage:function(e,t){e.className=e.className.replace(RegExp(n,"gi"),""),e.classList.add("language-"+t)},currentScript:function(){if("undefined"==typeof document)return null;if("currentScript"in document)return document.currentScript;try{throw new Error}catch(r){var e=(/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(r.stack)||[])[1];if(e){var n=document.getElementsByTagName("script");for(var t in n)if(n[t].src==e)return n[t]}return null}},isActive:function(e,n,t){for(var r="no-"+n;e;){var a=e.classList;if(a.contains(n))return!0;if(a.contains(r))return!1;e=e.parentElement}return!!t}},languages:{plain:r,plaintext:r,text:r,txt:r,extend:function(e,n){var t=a.util.clone(a.languages[e]);for(var r in n)t[r]=n[r];return t},insertBefore:function(e,n,t,r){var i=(r=r||a.languages)[e],l={};for(var o in i)if(i.hasOwnProperty(o)){if(o==n)for(var s in t)t.hasOwnProperty(s)&&(l[s]=t[s]);t.hasOwnProperty(o)||(l[o]=i[o])}var u=r[e];return r[e]=l,a.languages.DFS(a.languages,(function(n,t){t===u&&n!=e&&(this[n]=l)})),l},DFS:function e(n,t,r,i){i=i||{};var l=a.util.objId;for(var o in n)if(n.hasOwnProperty(o)){t.call(n,o,n[o],r||o);var s=n[o],u=a.util.type(s);"Object"!==u||i[l(s)]?"Array"!==u||i[l(s)]||(i[l(s)]=!0,e(s,t,o,i)):(i[l(s)]=!0,e(s,t,null,i))}}},plugins:{},highlightAll:function(e,n){a.highlightAllUnder(document,e,n)},highlightAllUnder:function(e,n,t){var r={callback:t,container:e,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};a.hooks.run("before-highlightall",r),r.elements=Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)),a.hooks.run("before-all-elements-highlight",r);for(var i,l=0;i=r.elements[l++];)a.highlightElement(i,!0===n,r.callback)},highlightElement:function(n,t,r){var i=a.util.getLanguage(n),l=a.languages[i];a.util.setLanguage(n,i);var o=n.parentElement;o&&"pre"===o.nodeName.toLowerCase()&&a.util.setLanguage(o,i);var s={element:n,language:i,grammar:l,code:n.textContent};function u(e){s.highlightedCode=e,a.hooks.run("before-insert",s),s.element.innerHTML=s.highlightedCode,a.hooks.run("after-highlight",s),a.hooks.run("complete",s),r&&r.call(s.element)}if(a.hooks.run("before-sanity-check",s),(o=s.element.parentElement)&&"pre"===o.nodeName.toLowerCase()&&!o.hasAttribute("tabindex")&&o.setAttribute("tabindex","0"),!s.code)return a.hooks.run("complete",s),void(r&&r.call(s.element));if(a.hooks.run("before-highlight",s),s.grammar)if(t&&e.Worker){var c=new Worker(a.filename);c.onmessage=function(e){u(e.data)},c.postMessage(JSON.stringify({language:s.language,code:s.code,immediateClose:!0}))}else u(a.highlight(s.code,s.grammar,s.language));else u(a.util.encode(s.code))},highlight:function(e,n,t){var r={code:e,grammar:n,language:t};if(a.hooks.run("before-tokenize",r),!r.grammar)throw new Error('The language "'+r.language+'" has no grammar.');return r.tokens=a.tokenize(r.code,r.grammar),a.hooks.run("after-tokenize",r),i.stringify(a.util.encode(r.tokens),r.language)},tokenize:function(e,n){var t=n.rest;if(t){for(var r in t)n[r]=t[r];delete n.rest}var a=new s;return u(a,a.head,e),o(e,a,n,a.head,0),function(e){for(var n=[],t=e.head.next;t!==e.tail;)n.push(t.value),t=t.next;return n}(a)},hooks:{all:{},add:function(e,n){var t=a.hooks.all;t[e]=t[e]||[],t[e].push(n)},run:function(e,n){var t=a.hooks.all[e];if(t&&t.length)for(var r,i=0;r=t[i++];)r(n)}},Token:i};function i(e,n,t,r){this.type=e,this.content=n,this.alias=t,this.length=0|(r||"").length}function l(e,n,t,r){e.lastIndex=n;var a=e.exec(t);if(a&&r&&a[1]){var i=a[1].length;a.index+=i,a[0]=a[0].slice(i)}return a}function o(e,n,t,r,s,g){for(var f in t)if(t.hasOwnProperty(f)&&t[f]){var h=t[f];h=Array.isArray(h)?h:[h];for(var d=0;d<h.length;++d){if(g&&g.cause==f+","+d)return;var v=h[d],p=v.inside,m=!!v.lookbehind,y=!!v.greedy,k=v.alias;if(y&&!v.pattern.global){var x=v.pattern.toString().match(/[imsuy]*$/)[0];v.pattern=RegExp(v.pattern.source,x+"g")}for(var b=v.pattern||v,w=r.next,A=s;w!==n.tail&&!(g&&A>=g.reach);A+=w.value.length,w=w.next){var E=w.value;if(n.length>e.length)return;if(!(E instanceof i)){var P,L=1;if(y){if(!(P=l(b,A,e,m))||P.index>=e.length)break;var S=P.index,O=P.index+P[0].length,j=A;for(j+=w.value.length;S>=j;)j+=(w=w.next).value.length;if(A=j-=w.value.length,w.value instanceof i)continue;for(var C=w;C!==n.tail&&(j<O||"string"==typeof C.value);C=C.next)L++,j+=C.value.length;L--,E=e.slice(A,j),P.index-=A}else if(!(P=l(b,0,E,m)))continue;S=P.index;var N=P[0],_=E.slice(0,S),M=E.slice(S+N.length),W=A+E.length;g&&W>g.reach&&(g.reach=W);var z=w.prev;if(_&&(z=u(n,z,_),A+=_.length),c(n,z,L),w=u(n,z,new i(f,p?a.tokenize(N,p):N,k,N)),M&&u(n,w,M),L>1){var I={cause:f+","+d,reach:W};o(e,n,t,w.prev,A,I),g&&I.reach>g.reach&&(g.reach=I.reach)}}}}}}function s(){var e={value:null,prev:null,next:null},n={value:null,prev:e,next:null};e.next=n,this.head=e,this.tail=n,this.length=0}function u(e,n,t){var r=n.next,a={value:t,prev:n,next:r};return n.next=a,r.prev=a,e.length++,a}function c(e,n,t){for(var r=n.next,a=0;a<t&&r!==e.tail;a++)r=r.next;n.next=r,r.prev=n,e.length-=a}if(e.Prism=a,i.stringify=function e(n,t){if("string"==typeof n)return n;if(Array.isArray(n)){var r="";return n.forEach((function(n){r+=e(n,t)})),r}var i={type:n.type,content:e(n.content,t),tag:"span",classes:["token",n.type],attributes:{},language:t},l=n.alias;l&&(Array.isArray(l)?Array.prototype.push.apply(i.classes,l):i.classes.push(l)),a.hooks.run("wrap",i);var o="";for(var s in i.attributes)o+=" "+s+'="'+(i.attributes[s]||"").replace(/"/g,"&quot;")+'"';return"<"+i.tag+' class="'+i.classes.join(" ")+'"'+o+">"+i.content+"</"+i.tag+">"},!e.document)return e.addEventListener?(a.disableWorkerMessageHandler||e.addEventListener("message",(function(n){var t=JSON.parse(n.data),r=t.language,i=t.code,l=t.immediateClose;e.postMessage(a.highlight(i,a.languages[r],r)),l&&e.close()}),!1),a):a;var g=a.util.currentScript();function f(){a.manual||a.highlightAll()}if(g&&(a.filename=g.src,g.hasAttribute("data-manual")&&(a.manual=!0)),!a.manual){var h=document.readyState;"loading"===h||"interactive"===h&&g&&g.defer?document.addEventListener("DOMContentLoaded",f):window.requestAnimationFrame?window.requestAnimationFrame(f):window.setTimeout(f,16)}return a}(_self);"undefined"!=typeof module&&module.exports&&(module.exports=Prism),"undefined"!=typeof global&&(global.Prism=Prism);Prism.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},Prism.languages.markup.tag.inside["attr-value"].inside.entity=Prism.languages.markup.entity,Prism.languages.markup.doctype.inside["internal-subset"].inside=Prism.languages.markup,Prism.hooks.add("wrap",(function(a){"entity"===a.type&&(a.attributes.title=a.content.replace(/&amp;/,"&"))})),Object.defineProperty(Prism.languages.markup.tag,"addInlined",{value:function(a,e){var s={};s["language-"+e]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:Prism.languages[e]},s.cdata=/^<!\[CDATA\[|\]\]>$/i;var t={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:s}};t["language-"+e]={pattern:/[\s\S]+/,inside:Prism.languages[e]};var n={};n[a]={pattern:RegExp("(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[^])*?(?=</__>)".replace(/__/g,(function(){return a})),"i"),lookbehind:!0,greedy:!0,inside:t},Prism.languages.insertBefore("markup","cdata",n)}}),Object.defineProperty(Prism.languages.markup.tag,"addAttribute",{value:function(a,e){Prism.languages.markup.tag.inside["special-attr"].push({pattern:RegExp("(^|[\"'\\s])(?:"+a+")\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))","i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[e,"language-"+e],inside:Prism.languages[e]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup,Prism.languages.xml=Prism.languages.extend("markup",{}),Prism.languages.ssml=Prism.languages.xml,Prism.languages.atom=Prism.languages.xml,Prism.languages.rss=Prism.languages.xml;!function(s){var e=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;s.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:RegExp("@[\\w-](?:[^;{\\s\"']|\\s+(?!\\s)|"+e.source+")*?(?:;|(?=\\s*\\{))"),inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+e.source+"|(?:[^\\\\\r\n()\"']|\\\\[^])*)\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+e.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+e.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:e,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},s.languages.css.atrule.inside.rest=s.languages.css;var t=s.languages.markup;t&&(t.tag.addInlined("style","css"),t.tag.addAttribute("style","css"))}(Prism);Prism.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/};Prism.languages.javascript=Prism.languages.extend("clike",{"class-name":[Prism.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp("(^|[^\\w$])(?:NaN|Infinity|0[bB][01]+(?:_[01]+)*n?|0[oO][0-7]+(?:_[0-7]+)*n?|0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?|\\d+(?:_\\d+)*n|(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?)(?![\\w$])"),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),Prism.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,Prism.languages.insertBefore("javascript","keyword",{regex:{pattern:RegExp("((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/(?:(?:\\[(?:[^\\]\\\\\r\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\r\n])+/[dgimyus]{0,7}|(?:\\[(?:[^[\\]\\\\\r\n]|\\\\.|\\[(?:[^[\\]\\\\\r\n]|\\\\.|\\[(?:[^[\\]\\\\\r\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\r\n])+/[dgimyus]{0,7}v[dgimyus]{0,7})(?=(?:\\s|/\\*(?:[^*]|\\*(?!/))*\\*/)*(?:$|[\r\n,.;:})\\]]|//))"),lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:Prism.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:Prism.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:Prism.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),Prism.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:Prism.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),Prism.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),Prism.languages.markup&&(Prism.languages.markup.tag.addInlined("script","javascript"),Prism.languages.markup.tag.addAttribute("on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)","javascript")),Prism.languages.js=Prism.languages.javascript; </script><p>会话ID：<span id="sessionid"></span><button onclick="add()">新建聊天</button></p><div style="height: 800px;border: 1px solid;width: 100%;padding: 24px;overflow: auto;" id="response"></div><div>    <input id="problem" placeholder="请输入要提问的问题" style="width: 90%;border: 1px solid;padding: 0 10px;" class="url-inp">    <button onclick="send(event.target)" style="height: 50px;width: 100px;font-size: 23px;" id="sendBtn">发送</button></div><p id="status"></p><script type="text/javascript">    var _sessionid = new Date().getTime();    document.getElementById("sessionid").innerHTML = _sessionid;    // 获取 input 元素      const input = document.getElementById("problem");      // 监听回车事件      input.addEventListener('keydown', function(event) {          if (event.keyCode === 13) {              // 执行回车事件处理函数              document.getElementById("sendBtn").click()         }      });    function send(target) {        var problem = input.value;        if(!problem){            return;        }        target.disabled  = true;        var status = document.getElementById("status");        var response = document.getElementById("response");        input.value ="";        response.innerHTML += `        <div style="clear: both;"><div style=" float: right;max-width: 75%;margin-right: 20px;"><div style="background-color: rgb(210 249 209 / var(--tw-bg-opacity));--tw-bg-opacity: 1;padding: 10px; display: inline-block;">${problem}</div><img style="max-width:24px; " src="https://img1.baidu.com/it/u=3423414161,1594291094&fm=253&app=138&size=w931&n=0&f=JPEG&fmt=auto?sec=1681146000&t=1b0535c82b878ef7b7c038ddcda6ab8e" onerror="javascript:this.parentNode.style.display = 'none';"></div></div>`;        response.scrollTop = response.scrollHeight;        status.innerText = "AI正在思考中...";        fetch("https://api.aichatos.cloud/api/generateStream", {            method: "post",            headers: {                "accept": "application/json, text/plain, */*",                "accept-encoding": "gzip, deflate, br",                "accept-language": "zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7",                "content-length": "113",                "content-type": "application/json",                "origin": "https://api.aichatos.cloud",                "referer": "https://api.aichatos.cloud",                "sec-ch-ua": "'Google Chrome';v='111', 'Not(A:Brand';v='8', 'Chromium';v='111'",                "sec-ch-ua-mobile": "?0",                "sec-ch-ua-platform": "Windows",                "sec-fetch-dest": "empty",                "sec-fetch-mode": "cors",                "sec-fetch-site": "same-site",                "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36"            },            body: JSON.stringify({ "prompt": problem, "userId": "#/chat/" + _sessionid, "network": false, "apikey": "", "system": "", "withoutContext": false })        }).then((res) => {            return res.text();        }).then((res) => {            let pattern = /盗版的 GPT-3.5 接口网站|盗用GPT-3.5接口的网站|盗用/g;            if (pattern.test(res)) {                res ="网络错误，请重新尝试。";            }             var aid = new Date().getTime();            response.innerHTML += `           <div style=" float: left;margin: 30px 0px;"><img style="max-width:24px;" src="https://favicon.yandex.net/favicon/v2/https://openai.com?size=32" onerror="javascript:this.parentNode.style.display = 'none';"><div style="--tw-bg-opacity: 1; background-color: rgb(248 235 252 / var(--tw-bg-opacity));padding: 10px; display: inline-block;max-width: 85%;margin-left: 30px;    white-space: pre-wrap" id="${aid}"></div></div>`;            document.getElementById(aid).innerHTML = marked.parse(res);            response.scrollTop = response.scrollHeight;            status.innerText = "完毕！";        }).finally(()=>{            target.disabled  = false;            Prism.highlightAll()        });    }    function add() {        _sessionid = new Date().getTime();        document.getElementById("status").innerText = "会话创建成功，会话ID：" + _sessionid;        document.getElementById("sessionid").innerHTML = _sessionid;    }</script>]]></content>
      
      
      <categories>
          
          <category> ChatGPT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ChatGPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>聚合短视频解析去水印</title>
      <link href="/2023/04/08/qushuiyin/"/>
      <url>/2023/04/08/qushuiyin/</url>
      
        <content type="html"><![CDATA[<h5 id="目前支持：皮皮虾-抖音-微视-快手-6间房-哔哩哔哩-微博-绿洲-度小视-开眼-陌陌-皮皮搞笑-全民k歌-逗拍-虎牙-新片场-哔哩哔哩-Acfun-美拍-西瓜视频-火山小视频-网易云Mlog-好看视频"><a href="#目前支持：皮皮虾-抖音-微视-快手-6间房-哔哩哔哩-微博-绿洲-度小视-开眼-陌陌-皮皮搞笑-全民k歌-逗拍-虎牙-新片场-哔哩哔哩-Acfun-美拍-西瓜视频-火山小视频-网易云Mlog-好看视频" class="headerlink" title="目前支持：皮皮虾/抖音/微视/快手/6间房/哔哩哔哩/微博/绿洲/度小视/开眼/陌陌/皮皮搞笑/全民k歌/逗拍/虎牙/新片场/哔哩哔哩/Acfun/美拍/西瓜视频/火山小视频/网易云Mlog/好看视频"></a>目前支持：皮皮虾/抖音/微视/快手/6间房/哔哩哔哩/微博/绿洲/度小视/开眼/陌陌/皮皮搞笑/全民k歌/逗拍/虎牙/新片场/哔哩哔哩/Acfun/美拍/西瓜视频/火山小视频/网易云Mlog/好看视频</h5><h5 id="温馨提示：粘贴视频地址时无需删除文案-但如果视频链接正确但解析失败请删掉文案后重试"><a href="#温馨提示：粘贴视频地址时无需删除文案-但如果视频链接正确但解析失败请删掉文案后重试" class="headerlink" title="温馨提示：粘贴视频地址时无需删除文案 但如果视频链接正确但解析失败请删掉文案后重试"></a>温馨提示：粘贴视频地址时无需删除文案 但如果视频链接正确但解析失败请删掉文案后重试</h5><br><br><div>    <h3 style="display: inline-block;">视频地址：</h3>    <input id="url" placeholder="请粘贴需要解析的视频链接支持文案直接复制" style="width: 60%;border: 1px solid;padding: 0 10px;" class="url-inp">    <button onclick="jiexi()" style="height: 50px;width: 100px;font-size: 23px;">解析</button></div><p id="status"></p><div id="videoinfo">    </div><p><br><br><br><br><br></p><script type="text/javascript">  function jiexi(){    var status = document.getElementById("status");    var videoinfo  = document.getElementById("videoinfo");    videoinfo.innerHTML="";    status.innerText = "正在解析中...";    fetch(`https://tenapi.cn/v2/video?url=${httpString(document.getElementById("url").value)}`).then((res)=>{ return res.json();}).then((res)=>{        if(res.code !=200){            status.innerText =res.msg;            return;        }       videoinfo.innerHTML = `        <p>视频标题：${res.data.title}</p>        <p>作者：${res.data.author}</p>        <p>视频链接：<a target="_blank" href="${res.data.url}">点击跳转</a></p>        <iframe  style="width:70%;height: 500px;"  frameborder="no" allowtransparency="yes"  src="${res.data.url}"></iframe>`;        status.innerText = "解析完毕。";    }).finally(()=>{          });  }    function httpString(s) {        var reg = /(https?|http|ftp|file):\/\/[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]/g;        s = s.match(reg);        return s && s.length>0?s[0]:"";    }</script>]]></content>
      
      
      <categories>
          
          <category> 短视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 短视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jetbrains 全家桶服务器激活</title>
      <link href="/2022/06/07/jetbrains/"/>
      <url>/2022/06/07/jetbrains/</url>
      
        <content type="html"><![CDATA[<h1 id="Jetbrains-全家桶服务器激活"><a href="#Jetbrains-全家桶服务器激活" class="headerlink" title="Jetbrains 全家桶服务器激活"></a>Jetbrains 全家桶服务器激活</h1><ol><li><p>首先打开这个网站：<a href="https://search.censys.io/">https://search.censys.io/</a>   </p><p> 或者直接打开 <a href="https://search.censys.io/search?resource=hosts&amp;sort=RELEVANCE&amp;per_page=25&amp;virtual_hosts=EXCLUDE&amp;q=services.http.response.headers.location:+account.jetbrains.com/fls-auth/">https://search.censys.io/search?resource=hosts&amp;sort=RELEVANCE&amp;per_page=25&amp;virtual_hosts=EXCLUDE&amp;q=services.http.response.headers.location%3A+account.jetbrains.com%2Ffls-auth/</a></p></li><li><p>然后在搜索框中输入：services.http.response.headers.location: account.jetbrains.com/fls-auth，点击搜索，网站会检索出很多 IP 地址</p></li><li><p>任意点一个 IP 地址查看详情页，确保80/HTTP地址下的Status Code状态码为302，这时候复制出Detail这里的 IP 地址，作为我们的 License Server 地址</p><img src="https://fastly.jsdelivr.net/gh/openHacking/static-files@main/uPic/eKrOrk.png"></li><li><p>输入地址后点击激活</p><img src="https://fastly.jsdelivr.net/gh/openHacking/static-files@main/uPic/HSziOB.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> Jetbrains </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jetbrains </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis</title>
      <link href="/2022/01/15/redis/"/>
      <url>/2022/01/15/redis/</url>
      
        <content type="html"><![CDATA[<p><strong>启动redis (指定配置文件运行)</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./redis-server   ./redis.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>查看redis运行状态、进程</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">ps -ef | grep redis<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>连接redis</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">./redis-cli -h 127.0.0.1 -p 6379<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>选中第N个库</strong></p><p>选中第二个库</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">select 2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>给第二个库插入一个key=name ,value=张三</p><pre class="line-numbers language-none"><code class="language-none">set name 张三<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://s2.loli.net/2022/01/15/Kqkxo2dGLmgyhwP.png"></p>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx 常用命令及配置</title>
      <link href="/2022/01/12/nginx-code/"/>
      <url>/2022/01/12/nginx-code/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows下Nginx的启动、停止、重启等命令"><a href="#Windows下Nginx的启动、停止、重启等命令" class="headerlink" title="Windows下Nginx的启动、停止、重启等命令"></a>Windows下Nginx的启动、停止、重启等命令</h1><p><strong>1、启动：</strong> </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">start nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>2、停止：</strong> </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nginx.exe -s stop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nginx.exe -s quit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>3、重新载入Nginx：</strong> </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nginx.exe -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>4、重新打开日志文件：</strong> </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nginx.exe -s reopen<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h1><p><strong>1.反向代理配置端口</strong></p><pre class="line-numbers language-none"><code class="language-none"># 配置 只有xxx.xxx.com  域名访问 80端口 ，反向代理到 本机的81端口。server {        listen       80;    server_name  xxx.xxx.com;    location / {    proxy_pass http://127.0.0.1:81;    index  index.html index.htm index.jsp;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>2、SSL证书配置</strong></p><pre class="line-numbers language-none"><code class="language-none">  server {      listen       443 ssl;      server_name  xxx.xxx.com;ssl_certificate cert/xxx-xxx.com.pem;ssl_certificate_key cert/xxx-xxx.com.key;ssl_session_cache    shared:SSL:1m;ssl_session_timeout  5m;ssl_ciphers  ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;ssl_prefer_server_ciphers  on;ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   location / {  proxy_http_version 1.1;proxy_set_header Host $host:443;          proxy_set_header X-Forwarded-For $remote_addr;proxy_set_header X-Forwarded-Scheme $scheme;proxy_set_header X-Forwarded-Proto  $scheme;          proxy_pass http://127.0.0.1;      }  }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3、配置文件目录映射</strong></p><pre class="line-numbers language-none"><code class="language-none">server {           listen       80;       server_name  xxx.xxxx.com;       location / {root H:/public-list/; # H:/public-list/ 指定实际目录绝对路径autoindex on; # 开启目录浏览功能autoindex_exact_size on;  # 显示出文件的确切大小，单位是bytesautoindex_localtime on;  # 显示的文件时间为文件的服务器时间}   }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux文档</title>
      <link href="/2022/01/07/linux-doc/"/>
      <url>/2022/01/07/linux-doc/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-中常用的命令"><a href="#Linux-中常用的命令" class="headerlink" title="Linux 中常用的命令"></a>Linux 中常用的命令</h1><p><strong>查看实时日志(滚动日志)</strong></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">tail</span> -f path/test.log<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>**也可以使用匹配想要的log信息 **</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">tail</span> -f path/test.log <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">'RE expression'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id=""><a href="#" class="headerlink" title=""></a></h5>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown</title>
      <link href="/2022/01/07/markdown/"/>
      <url>/2022/01/07/markdown/</url>
      
        <content type="html"><![CDATA[<p><a href="https://markdown.com.cn/intro.html" title="markdown官网">访问markdown官网</a></p><iframe style="width:100%;height:700px;" frameborder="no" allowtransparency="yes" src="https://markdown.com.cn/basic-syntax/headings.html"></iframe>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用命令</title>
      <link href="/2022/01/07/git-code/"/>
      <url>/2022/01/07/git-code/</url>
      
        <content type="html"><![CDATA[<p>本篇将为大家分享Git一些常用的命令<br><img src="https://www.runoob.com/wp-content/uploads/2015/02/011500266295799.jpg"></p><pre class="line-numbers language-git" data-language="git"><code class="language-git">git init                                                  # 初始化本地git仓库（创建新仓库）git config --global user.name <span class="token string">"xxx"</span>                       # 配置用户名git config --global user.email <span class="token string">"xxx@xxx.com"</span>              # 配置邮件git config --global color.ui true                         # git status等命令自动着色git config --global color.status autogit config --global color.diff autogit config --global color.branch autogit config --global color.interactive autogit config --global --unset http.proxy                    # remove  proxy configuration on gitgit clone git+ssh://git@192.168.53.168/VT.git             # clone远程仓库git status                                                # 查看当前版本状态（是否修改）git add xyz                                               # 添加xyz文件至indexgit add .                                                 # 增加当前子目录下所有更改过的文件至indexgit commit -m <span class="token string">'xxx'</span>                                       # 提交git commit --amend -m <span class="token string">'xxx'</span>                               # 合并上一次提交（用于反复修改）git commit -am <span class="token string">'xxx'</span>                                      # 将add和commit合为一步git rm xxx                                                # 删除index中的文件git rm -r *                                               # 递归删除git log                                                   # 显示提交日志git log -1                                                # 显示1行日志 -n为n行git log -5git log --stat                                            # 显示提交日志及相关变动文件git log -p -mgit show dfb02e6e4f2f7b573337763e5c0013802e392818         # 显示某个提交的详细内容git show dfb02                                            # 可只用commitid的前几位git show HEAD                                             # 显示HEAD提交日志git show HEAD^                                            # 显示HEAD的父（上一个版本）的提交日志 ^^为上两个版本 ^5为上5个版本git tag                                                   # 显示已存在的taggit tag -a v2.0 -m <span class="token string">'xxx'</span>                                  # 增加v2.0的taggit show v2.0                                             # 显示v2.0的日志及详细内容git log v2.0                                              # 显示v2.0的日志git diff                                                  # 显示所有未添加至index的变更git diff --cached                                         # 显示所有已添加index但还未commit的变更git diff HEAD^                                            # 比较与上一个版本的差异git diff HEAD -- ./lib                                    # 比较与HEAD版本lib目录的差异git diff origin/master..master                            # 比较远程分支master上有本地分支master上没有的git diff origin/master..master --stat                     # 只显示差异的文件，不显示具体内容git remote add origin git+ssh://git@192.168.53.168/VT.git # 增加远程定义（用于push/pull/fetch）git branch                                                # 显示本地分支git branch --contains 50089                               # 显示包含提交50089的分支git branch -a                                             # 显示所有分支git branch -r                                             # 显示所有原创分支git branch --merged                                       # 显示所有已合并到当前分支的分支git branch --no-merged                                    # 显示所有未合并到当前分支的分支git branch -m master master_copy                          # 本地分支改名git checkout -b master_copy                               # 从当前分支创建新分支master_copy并检出git checkout -b master master_copy                        # 上面的完整版git checkout features/performance                         # 检出已存在的features/performance分支git checkout --track hotfixes/BJVEP933                    # 检出远程分支hotfixes/BJVEP933并创建本地跟踪分支git checkout v2.0                                         # 检出版本v2.0git checkout -b devel origin/develop                      # 从远程分支develop创建新本地分支devel并检出git checkout -- README                                    # 检出head版本的README文件（可用于修改错误回退）git merge origin/master                                   # 合并远程master分支至当前分支git cherry-pick ff44785404a8e                             # 合并提交ff44785404a8e的修改git push origin master                                    # 将当前分支push到远程master分支git push origin :hotfixes/BJVEP933                        # 删除远程仓库的hotfixes/BJVEP933分支git push --tags                                           # 把所有tag推送到远程仓库git fetch                                                 # 获取所有远程分支（不更新本地分支，另需merge）git fetch --prune                                         # 获取所有原创分支并清除服务器上已删掉的分支git pull origin master                                    # 获取远程分支master并merge到当前分支git mv README README2                                     # 重命名文件README为README2git reset --hard HEAD                                     # 将当前版本重置为HEAD（通常用于merge失败回退）git rebasegit branch -d hotfixes/BJVEP933                           # 删除分支hotfixes/BJVEP933（本分支修改已合并到其他分支）git branch -D hotfixes/BJVEP933                           # 强制删除分支hotfixes/BJVEP933git ls-files                                              # 列出git index包含的文件git show-branch                                           # 图示当前分支历史git show-branch --all                                     # 图示所有分支历史git whatchanged                                           # 显示提交历史对应的文件修改git revert dfb02e6e4f2f7b573337763e5c0013802e392818       # 撤销提交dfb02e6e4f2f7b573337763e5c0013802e392818git ls-tree HEAD                                          # 内部命令：显示某个git对象git rev-parse v2.0                                        # 内部命令：显示某个ref对于的SHA1 HASHgit reflog                                                # 显示所有提交，包括孤立节点git show HEAD@{5}git show master@{yesterday}                               # 显示master分支昨天的状态git log --pretty=format:<span class="token string">'%h %s'</span> --graph                   # 图示提交日志git show HEAD~3git show -s --pretty=raw 2be7fcb476git stash                                                 # 暂存当前修改，将所有至为HEAD状态git stash list                                            # 查看所有暂存git stash show -p stash@{0}                               # 参考第一次暂存git stash apply stash@{0}                                 # 应用第一次暂存git grep <span class="token string">"delete from"</span>                                    # 文件中搜索文本“delete from”git grep -e <span class="token string">'#define'</span> --and -e SORT_DIRENTgit gcgit fsck<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo介绍</title>
      <link href="/2022/01/06/hello-world/"/>
      <url>/2022/01/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客管理</title>
      <link href="/2021/12/31/blog-manage/"/>
      <url>/2021/12/31/blog-manage/</url>
      
        <content type="html"><![CDATA[<h1 id="文章访问加密方法（SHA256-）："><a href="#文章访问加密方法（SHA256-）：" class="headerlink" title="文章访问加密方法（SHA256 ）："></a>文章访问加密方法（SHA256 ）：</h1><script src="https://cdn.bootcdn.net/ajax/libs/js-sha256/0.9.0/sha256.min.js"></script><input id="password" placeholder="请输入要加密的字符"><button onclick="strConvertSha256()">生成SHA256密码</button><input id="sha256" placeholder="生成的密文"><script type="text/javascript">  function strConvertSha256(){    var str = this.document.getElementById("password").value;    this.document.getElementById("sha256").value = sha256(str);  }</script><h1 id="评论系统-Valine-："><a href="#评论系统-Valine-：" class="headerlink" title="评论系统(Valine )："></a>评论系统(<a href="https://console.leancloud.cn/apps/zySaaEBgGPpLXNtHR9Y3wqTt-gzGzoHsz/storage/data/Comment" title="LeanCloud">Valine</a> )：</h1><h1 id="域名平台-freenom-：账号-x35-54-x30-x40-x67-x6d-97-105-x6c-46-x63-x6f-109-速度较慢-无需梯子-已废弃"><a href="#域名平台-freenom-：账号-x35-54-x30-x40-x67-x6d-97-105-x6c-46-x63-x6f-109-速度较慢-无需梯子-已废弃" class="headerlink" title="域名平台(freenom )：账号:****560@gmail.com  速度较慢 无需梯子   已废弃"></a>域名平台(<a href="https://www.freenom.com/zh/index.html?lang=zh" title="freenom">freenom</a> )：账号:****<a href="mailto:560@gmail.com">560@gmail.com</a>  速度较慢 无需梯子   已废弃</h1><h1 id="域名平台2-godaddy-：账号-qq邮箱-托管在https-console-dnspod-cn-（腾讯云域名管理）"><a href="#域名平台2-godaddy-：账号-qq邮箱-托管在https-console-dnspod-cn-（腾讯云域名管理）" class="headerlink" title="域名平台2(godaddy )：账号:qq邮箱  托管在https://console.dnspod.cn （腾讯云域名管理）"></a>域名平台2(<a href="https://godaddy.com/" title="godaddy">godaddy</a> )：账号:qq邮箱  托管在<a href="https://console.dnspod.cn/">https://console.dnspod.cn</a> （腾讯云域名管理）</h1>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
